{"version":3,"sources":["components/FormContact/FormContact.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","pages/ContactsPage/ContactsPage.module.css","redux/contacts/contacts-selectors.js","components/FormContact/FormContact.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"names":["module","exports","getItems","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","FormContact","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","resetState","className","s","form","onSubmit","e","preventDefault","find","item","duplicateValidator","operations","toast","warn","label","input_name","type","pattern","onChange","title","required","input_number","button","btnText","ContactListItem","id","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","useEffect","map","Filter","filterInput","actions","ContactsPage","thumb"],"mappings":"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","file":"static/js/4.ad5e5d9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1kkKM\",\"label\":\"FormContact_label__1a9R0\",\"input_name\":\"FormContact_input_name__3gmer\",\"input_number\":\"FormContact_input_number__DtNzQ\",\"button\":\"FormContact_button__3R7jp\",\"btnText\":\"FormContact_btnText__3T0zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3FCK3\",\"listItemText\":\"ContactListItem_listItemText__3sMiv\",\"button\":\"ContactListItem_button__3zEyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1QRP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactsPage_title__2QMpV\",\"thumb\":\"ContactsPage_thumb__1v0WM\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  getItems,\r\n  getFilter,\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { getItems } from '../../redux/contacts/contacts-selectors';\nimport s from './FormContact.module.css';\n\nfunction FormContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicateValidator = name => items.find(item => item.name === name);\n\n    duplicateValidator(name)\n      ? toast.warn(`${name} is already in your phonebook`)\n      : dispatch(operations.addContact({ name, number }));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input_name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input_number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}>Add contact</span>\n      </button>\n    </form>\n  );\n}\n\nexport default FormContact;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({\n  id,\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => onClickDeleteContact(id)}\n      >\n        Delete contact\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport ContactListItem from '../ContactList/ContactListItem';\n\nconst ContactList = () => {\n  const items = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul>\n      {items.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          contactName={name}\n          contactNumber={number}\n          onClickDeleteContact={() => dispatch(operations.deleteContact(id))}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(actions.filterContact(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import FormContact from '../../components/FormContact';\r\nimport ContactList from '../../components/ContactList';\r\nimport Filter from '../../components/Filter';\r\nimport s from './ContactsPage.module.css';\r\n\r\nfunction ContactsPage() {\r\n  return (\r\n    <div className={s.thumb}>\r\n      <h1 className={s.title}>Your personal Phonebook</h1>\r\n      <FormContact />\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}